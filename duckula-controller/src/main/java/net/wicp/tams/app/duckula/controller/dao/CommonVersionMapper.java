package net.wicp.tams.app.duckula.controller.dao;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

import com.baomidou.mybatisplus.core.mapper.BaseMapper;

import net.wicp.tams.app.duckula.controller.bean.models.CommonVersion;
import net.wicp.tams.app.duckula.controller.bean.models.CommonVersionExample;

public interface CommonVersionMapper extends BaseMapper<CommonVersion> {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table common_version
	 * @mbg.generated
	 */
	long countByExample(CommonVersionExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table common_version
	 * @mbg.generated
	 */
	int deleteByExample(CommonVersionExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table common_version
	 * @mbg.generated
	 */
	@Delete({ "delete from common_version", "where id = #{id,jdbcType=INTEGER}" })
	int deleteByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table common_version
	 * @mbg.generated
	 */
	@Insert({ "insert into common_version (id, main_version, ", "data_version, author, ", "update_time, readme, ",
			"store_cloud, accessKey, ", "secretKey, path)",
			"values (#{id,jdbcType=INTEGER}, #{mainVersion,jdbcType=VARCHAR}, ",
			"#{dataVersion,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, ",
			"#{updateTime,jdbcType=TIMESTAMP}, #{readme,jdbcType=VARCHAR}, ",
			"#{storeCloud,jdbcType=VARCHAR}, #{accesskey,jdbcType=VARCHAR}, ",
			"#{secretkey,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR})" })
	int insert(CommonVersion record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table common_version
	 * @mbg.generated
	 */
	int insertSelective(CommonVersion record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table common_version
	 * @mbg.generated
	 */
	List<CommonVersion> selectByExample(CommonVersionExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table common_version
	 * @mbg.generated
	 */
	@Select({ "select", "id, main_version, data_version, author, update_time, readme, store_cloud, accessKey, ",
			"secretKey, path", "from common_version", "where id = #{id,jdbcType=INTEGER}" })
	@ResultMap("net.wicp.tams.app.duckula.controller.dao.CommonVersionMapper.BaseResultMap")
	CommonVersion selectByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table common_version
	 * @mbg.generated
	 */
	int updateByExampleSelective(@Param("record") CommonVersion record, @Param("example") CommonVersionExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table common_version
	 * @mbg.generated
	 */
	int updateByExample(@Param("record") CommonVersion record, @Param("example") CommonVersionExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table common_version
	 * @mbg.generated
	 */
	int updateByPrimaryKeySelective(CommonVersion record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table common_version
	 * @mbg.generated
	 */
	@Update({ "update common_version", "set main_version = #{mainVersion,jdbcType=VARCHAR},",
			"data_version = #{dataVersion,jdbcType=VARCHAR},", "author = #{author,jdbcType=VARCHAR},",
			"update_time = #{updateTime,jdbcType=TIMESTAMP},", "readme = #{readme,jdbcType=VARCHAR},",
			"store_cloud = #{storeCloud,jdbcType=VARCHAR},", "accessKey = #{accesskey,jdbcType=VARCHAR},",
			"secretKey = #{secretkey,jdbcType=VARCHAR},", "path = #{path,jdbcType=VARCHAR}",
			"where id = #{id,jdbcType=INTEGER}" })
	int updateByPrimaryKey(CommonVersion record);
}