package net.wicp.tams.app.duckula.controller.dao;

import java.util.List;
import net.wicp.tams.app.duckula.controller.bean.models.CommonVersion;
import net.wicp.tams.app.duckula.controller.bean.models.CommonVersionExample;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface CommonVersionMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table common_version
     *
     * @mbg.generated
     */
    long countByExample(CommonVersionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table common_version
     *
     * @mbg.generated
     */
    int deleteByExample(CommonVersionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table common_version
     *
     * @mbg.generated
     */
    @Delete({
        "delete from common_version",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table common_version
     *
     * @mbg.generated
     */
    @Insert({
        "insert into common_version (id, main_version, ",
        "main_path, data_version, ",
        "data_path, author, ",
        "update_time, readme)",
        "values (#{id,jdbcType=INTEGER}, #{mainVersion,jdbcType=VARCHAR}, ",
        "#{mainPath,jdbcType=VARCHAR}, #{dataVersion,jdbcType=VARCHAR}, ",
        "#{dataPath,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, ",
        "#{updateTime,jdbcType=TIMESTAMP}, #{readme,jdbcType=VARCHAR})"
    })
    int insert(CommonVersion record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table common_version
     *
     * @mbg.generated
     */
    int insertSelective(CommonVersion record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table common_version
     *
     * @mbg.generated
     */
    List<CommonVersion> selectByExample(CommonVersionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table common_version
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, main_version, main_path, data_version, data_path, author, update_time, readme",
        "from common_version",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("net.wicp.tams.app.duckula.controller.dao.CommonVersionMapper.BaseResultMap")
    CommonVersion selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table common_version
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") CommonVersion record, @Param("example") CommonVersionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table common_version
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") CommonVersion record, @Param("example") CommonVersionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table common_version
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(CommonVersion record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table common_version
     *
     * @mbg.generated
     */
    @Update({
        "update common_version",
        "set main_version = #{mainVersion,jdbcType=VARCHAR},",
          "main_path = #{mainPath,jdbcType=VARCHAR},",
          "data_version = #{dataVersion,jdbcType=VARCHAR},",
          "data_path = #{dataPath,jdbcType=VARCHAR},",
          "author = #{author,jdbcType=VARCHAR},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "readme = #{readme,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(CommonVersion record);
}